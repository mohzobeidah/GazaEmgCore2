
@{
    ViewData["Title"] = "Index";
}

<h1>عرض النزلاء</h1>


<style>

    #QuarantineTable_filter {
        text-align: end;
    }

    .table {
        font-size: 18px;
    }
</style>

<table class="table table-striped" id="QuarantineTable">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col"> رقم الهوية / الجواز</th>
            <th scope="col">الاسم </th>
            <th scope="col">الجوال </th>
            <th scope="col">تاريخ الوصول</th>
            <th scope="col"> تفاصيل</th>

        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


  <div id="test"></div>


@section CssLinks
{




    <link href="~/DataTables-1.10.20/media/css/dataTables.bootstrap4.css" rel="stylesheet" />
}

@section ScriptsLinks{


    <script src="~/DataTables-1.10.20/media/js/jquery.dataTables.min.js"></script>
    <script src="~/DataTables-1.10.20/media/js/dataTables.bootstrap4.js"></script>

    <script src="~/js/moment.min.js"></script>

}


@section Scripts {


    <script type="text/javascript">

        completed = function (resp) {
            $('#test').empty();
            if (resp.responseText !== "" && resp.responseText !== "undifined" && resp.responseText !== null)
            {

                var $html = resp.responseText;
                $('#test').html($html);
                $('.modal').modal('show');
            }
        };
        $(document).ready(function () {
            var table = $("#QuarantineTable");


            $(document).ready(function () {

                // $("#MyDataTable").DataTable();

                BindDataTable();
            })
            $('#SearchName').click(function () {
                BindDataTable.ajax.reload();

            });
            var BindDataTable = function (response) {

                table.DataTable({
                    "destroy": true,
                    "bServerSide": true,
                    "sSearch": "Search all columns:",
                    "sAjaxSource": "/Quarantine/GetPersonsAjax",
                    "aaSorting": [[0, "desc"]],
                    "processing": "true",
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": تفعيل لترتيب العمود تصاعدياً",
                            "sortDescending": ": تفعيل لترتيب العمود تنازلياً"
                        },
                        "emptyTable": "لا يوجد بيانات",
                        "info": "عرض _START_ إلى _END_ من _TOTAL_ صفوف",
                        "infoEmpty": "لم يتم العثور على نتائج",
                        "infoFiltered": "(filtered1 من _MAX_ العدد الكلي)",
                        "lengthMenu": "_MENU_ اظهار",
                        "search": "بحث:",
                        "processing": '<h1>جاري جلب البيانات ...</h1>',
                        "zeroRecords": "لم يتم العثور على عناصر مطابقة",
                        "oPaginate": {
                            "sFirst": "الأول",
                            "sPrevious": "السابق",
                            "sNext": "التالي",
                            "sLast": "الأخير"
                        },
                    },
                    aoData: {
                        "data": function (d) {
                            return $.extend({}, d, RefrechParam([
                                //{ paramId: 'job', inputId: 'job' },
                                //{ paramId: 'FullName', inputId: 'FullName' },
                                //{ paramId: 'User_ID', inputId: 'hdnUserID_Search' }
                            ]));
                        },
                    },
                    "fnServerData": function (sSource, aoData, fnCallback) {

                        $.ajax({

                            type: "get",
                            data: aoData,
                            url: sSource,
                            success: fnCallback
                        })

                    },
                    "aoColumns": [
                        {
                            data: null, render: function (data, type, row, iDisplayIndex) {
                                return (iDisplayIndex.row + 1);

                            }

                        },
                        { data: "identityNo" },
                        { data: "fullName" },
                        { data: "phoneNo" },
                        {
                            data: null, render: function (data, type, row) {
                                var date = new Date(data.arrivalDate);
                                return moment(data.arrivalDate).format("DD-MM-YYYY");
                            }
                        },
                        {
                            data: null, render: function (data, type, row) {


                                return '<a class="btn-group"><a href="/Quarantine/details/' + data.id + '" class="btn red btn-sm btn-outline btnActivation sbold" style="margin-left: 5px;" title="عرض تفاصيل"><i class="fa fa-edit fa-address-card-o"></i> عرض تفاصيل </a>'
                                    + '<a href="AddEditUser?UserID=' + data.id + '" class="btn blue btn-sm btn-outline sbold" style="margin-left: 5px;" title=" تعديل"> <i class="fa fa-edit fa-fw"></i> تعديل</a></div>'
                                    + '<a href=/Quarantine/AddPersonMovement?id=' + data.id + '    data-ajax="true" data-ajax-method="get" data-ajax-complete="completed" data-ajax-failure ="failure"  class="btn blue btn-sm btn-outline sbold" style="margin-left: 5px;" title=" نقل"> <i class="fa fa-edit fa-fw"></i> نقل نزيل</a></div>'


                            }
                        }

                    ], "rowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {


                    }, "drawCallback": function (settings) {

                        //if (typeof DrawCallbackFunction === "function") {
                        //    DrawCallbackFunction();

                        //}


                    },

                });


            }


          

        });
        completedAdd = function (response) {
            var result = response.responseJSON
            console.log(response.responseJSON)
            $.toast({
                heading: result.color,
                text: result.msg,
                showHideTransition: 'slide',
                icon: result.color
            })
        };

        failureAdd = function (jqXHR, status) {
            $.toast({
                heading: 'Error',
                text: 'Uncaught Error.\n' + jqXHR.responseText,
                showHideTransition: 'fade',
                icon: 'error'
            })
        };
    </script>
}